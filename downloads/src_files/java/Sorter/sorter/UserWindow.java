/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package sorter;

import sorter.panels.Item;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Random;
import javax.swing.Timer;
import sorter.algorithm.Algorithm;
import sorter.algorithm.BubbleSort;
import sorter.algorithm.CocktailSort;
import sorter.algorithm.InsertionSort;
import sorter.algorithm.QuickSort;
import sorter.algorithm.Randomise;
import sorter.algorithm.SelectionSort;
import sorter.algorithm.misc.BlueCheck;
import sorter.color.SorterColor;
import sorter.core.GeneralManager;
import sorter.core.Statistics;
import sorter.panels.Panels;

/**
 *
 * @author Louis
 */
public class UserWindow extends javax.swing.JFrame {

    public boolean animationUnderway = false;
    
    private Algorithm algo;
    public final int timePerStep = 2;
    public int timeModifier = 1;

    public int howRandom = 2;
    /**
     * Creates new form UserWindow
     */
    public UserWindow() {
        initComponents();
        initMyComponents();
    }
    
    // Initialise things before the user takes control.
    private void initMyComponents() {
        UserWindow.mainPanel.setBackground(Color.WHITE);
        
        GeneralManager.useOrderedList = true;
        
        Panels.initPanels();
        Panels.makePanels(100);
        
        randomSlider.setValue(howRandom);
        
        stopButton.setVisible(false);
        
        Panels.updatePanelArray();
        
        algo = new Randomise();
    }

    // This is the nice animation after a sort has been performed to reset the panel to a blue colour.
    public void updatePanelArrayToBlue() {
        updateTable(this.algo.getStats());
        this.algo = new BlueCheck(this);
        this.algo.start();
    }

    private void changeArrayToColour(Color c)
    {
        for (int x = 0; x < Panels.panelsLength; x++) 
        {
            Panels.numbersPanel[x].setColour(c);
        }
    }
    
    private void updateTable(Statistics stats){
        for(int x = (statsTable.getRowCount()-1); x > 0; x--){
            statsTable.setValueAt(statsTable.getValueAt(x-1, 0), x, 0);
            statsTable.setValueAt(statsTable.getValueAt(x-1, 1), x, 1);
            statsTable.setValueAt(statsTable.getValueAt(x-1, 2), x, 2);
            statsTable.setValueAt(statsTable.getValueAt(x-1, 3), x, 3);
        }
        statsTable.setValueAt(stats.getType(), 0, 0);
        statsTable.setValueAt(Panels.panelsLength, 0, 1);
        statsTable.setValueAt(stats.getStatsComps(), 0, 2);
        statsTable.setValueAt(stats.getStatsSwaps(), 0, 3);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        mainMenu = new javax.swing.JPanel();
        titlePanel = new javax.swing.JPanel();
        titleLabel = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        displayPanel = new javax.swing.JPanel();
        updateLabel = new javax.swing.JLabel();
        stopButton = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        sortingOptionsPanel = new javax.swing.JPanel();
        sortButton = new javax.swing.JButton();
        dropDownSelection = new javax.swing.JComboBox();
        arraySizeComboBox = new javax.swing.JComboBox();
        arraySizeCBLabel = new javax.swing.JLabel();
        orderedListCheckbox = new javax.swing.JCheckBox();
        randomisingOptionsPanel = new javax.swing.JPanel();
        randomiserButton = new javax.swing.JButton();
        randomSlider = new javax.swing.JSlider();
        randomSliderLabel = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        reverseButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        tablePanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        statsTable = new javax.swing.JTable();
        tableLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sorting Algorithm Visualiser");
        setResizable(false);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sortPressed(evt);
            }
        });

        mainPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        mainPanel.setToolTipText("");

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 806, Short.MAX_VALUE)
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 616, Short.MAX_VALUE)
        );

        titleLabel.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        titleLabel.setText("Sorting Algorithm Visualiser");

        javax.swing.GroupLayout titlePanelLayout = new javax.swing.GroupLayout(titlePanel);
        titlePanel.setLayout(titlePanelLayout);
        titlePanelLayout.setHorizontalGroup(
            titlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(titlePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        titlePanelLayout.setVerticalGroup(
            titlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(titlePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        updateLabel.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        updateLabel.setText(" ");
        updateLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        stopButton.setText("STOP");
        stopButton.setToolTipText("");
        stopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout displayPanelLayout = new javax.swing.GroupLayout(displayPanel);
        displayPanel.setLayout(displayPanelLayout);
        displayPanelLayout.setHorizontalGroup(
            displayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(displayPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(displayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(stopButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(updateLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        displayPanelLayout.setVerticalGroup(
            displayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(displayPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(updateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(stopButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        sortButton.setText("Sort");
        sortButton.setToolTipText("");
        sortButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortButtonActionPerformed(evt);
            }
        });

        dropDownSelection.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Bubble Sort", "Selection Sort", "Insertion Sort", "Cocktail Shaker", "Quick Sort" }));

        arraySizeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "25", "50", "100", "200" }));
        arraySizeComboBox.setSelectedIndex(2);
        arraySizeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arraySizeComboBoxActionPerformed(evt);
            }
        });

        arraySizeCBLabel.setText("Number of items:");

        orderedListCheckbox.setSelected(true);
        orderedListCheckbox.setText("Use ordered list");
        orderedListCheckbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderedListCheckboxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout sortingOptionsPanelLayout = new javax.swing.GroupLayout(sortingOptionsPanel);
        sortingOptionsPanel.setLayout(sortingOptionsPanelLayout);
        sortingOptionsPanelLayout.setHorizontalGroup(
            sortingOptionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sortingOptionsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(sortingOptionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dropDownSelection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sortButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 84, Short.MAX_VALUE)
                .addGroup(sortingOptionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, sortingOptionsPanelLayout.createSequentialGroup()
                        .addComponent(arraySizeCBLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(arraySizeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(orderedListCheckbox, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        sortingOptionsPanelLayout.setVerticalGroup(
            sortingOptionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, sortingOptionsPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(sortingOptionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dropDownSelection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(arraySizeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(arraySizeCBLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(sortingOptionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sortButton)
                    .addComponent(orderedListCheckbox))
                .addContainerGap())
        );

        randomiserButton.setText("Randomise");
        randomiserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                randomiserButtonActionPerformed(evt);
            }
        });

        randomSlider.setMajorTickSpacing(1);
        randomSlider.setMaximum(10);
        randomSlider.setMinimum(1);
        randomSlider.setMinorTickSpacing(1);
        randomSlider.setPaintLabels(true);
        randomSlider.setPaintTicks(true);
        randomSlider.setSnapToTicks(true);

        randomSliderLabel.setText("Set how long to randomise for:");
        randomSliderLabel.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        randomSliderLabel.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        javax.swing.GroupLayout randomisingOptionsPanelLayout = new javax.swing.GroupLayout(randomisingOptionsPanel);
        randomisingOptionsPanel.setLayout(randomisingOptionsPanelLayout);
        randomisingOptionsPanelLayout.setHorizontalGroup(
            randomisingOptionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(randomisingOptionsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(randomisingOptionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(randomisingOptionsPanelLayout.createSequentialGroup()
                        .addComponent(randomiserButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(randomSliderLabel)
                        .addGap(0, 74, Short.MAX_VALUE))
                    .addComponent(randomSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        randomisingOptionsPanelLayout.setVerticalGroup(
            randomisingOptionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(randomisingOptionsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(randomisingOptionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(randomiserButton)
                    .addComponent(randomSliderLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(randomSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        reverseButton.setText("Reverse");
        reverseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reverseButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Specials:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(reverseButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(reverseButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        statsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Type of Sort", "Size", "Comparisons", "Swaps"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(statsTable);
        if (statsTable.getColumnModel().getColumnCount() > 0) {
            statsTable.getColumnModel().getColumn(0).setResizable(false);
            statsTable.getColumnModel().getColumn(1).setResizable(false);
            statsTable.getColumnModel().getColumn(2).setResizable(false);
            statsTable.getColumnModel().getColumn(3).setResizable(false);
        }

        tableLabel.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        tableLabel.setText("Results from last sorts:");

        javax.swing.GroupLayout tablePanelLayout = new javax.swing.GroupLayout(tablePanel);
        tablePanel.setLayout(tablePanelLayout);
        tablePanelLayout.setHorizontalGroup(
            tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tablePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(tableLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 331, Short.MAX_VALUE))
                .addContainerGap())
        );
        tablePanelLayout.setVerticalGroup(
            tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tablePanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tableLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(108, 108, 108))
        );

        javax.swing.GroupLayout mainMenuLayout = new javax.swing.GroupLayout(mainMenu);
        mainMenu.setLayout(mainMenuLayout);
        mainMenuLayout.setHorizontalGroup(
            mainMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainMenuLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainMenuLayout.createSequentialGroup()
                        .addGroup(mainMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(titlePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(mainMenuLayout.createSequentialGroup()
                                .addGroup(mainMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(randomisingOptionsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(mainMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(displayPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jSeparator1)
                                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jSeparator3)))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainMenuLayout.createSequentialGroup()
                                .addComponent(jSeparator2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(sortingOptionsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())
                    .addComponent(tablePanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        mainMenuLayout.setVerticalGroup(
            mainMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainMenuLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titlePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(randomisingOptionsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(displayPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(mainMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainMenuLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(mainMenuLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sortingOptionsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(31, 31, 31)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tablePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mainMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mainMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sortPressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sortPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_sortPressed

    private void randomiserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_randomiserButtonActionPerformed
        // TODO add your handling code here:
        if(!animationUnderway && !algo.isAnimationUnderway()){
            this.algo = new Randomise();
            this.algo.start();
            Panels.updatePanelArray();
        }
    }//GEN-LAST:event_randomiserButtonActionPerformed

    private void sortButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortButtonActionPerformed
        // TODO add your handling code here:
        if(!animationUnderway && !algo.isAnimationUnderway()){
            for(int x = 0; x < Panels.panelsLength-1; x++){
                // Only sort if the array is not ordered.
                if(Panels.numbersPanel[x].size() > Panels.numbersPanel[x+1].size())
                {
                    String statsType = dropDownSelection.getSelectedItem().toString();
                    updateLabel.setText("Sorting with " + statsType);
                    stopButton.setVisible(true);
                    if(dropDownSelection.getSelectedIndex() == 0)
                    {
                        this.algo = new BubbleSort(this);
                    }
                    else if(dropDownSelection.getSelectedIndex() == 1)
                    {
                        this.algo = new SelectionSort(this);
                    }
                    else if(dropDownSelection.getSelectedIndex() == 2)
                    {
                        this.algo = new InsertionSort(this);
                    }
                    else if(dropDownSelection.getSelectedIndex() == 3)
                    {
                        this.algo = new CocktailSort(this);
                    }
                    else if(dropDownSelection.getSelectedIndex() == 4)
                    {
                        this.algo = new QuickSort(this);
                    }
                    else
                    {
                        updateLabel.setText(statsType + " not implemented!");
                        stopButton.setVisible(false);
                        this.algo = null;
                    }
                    // Do the algorithm.
                    if(this.algo != null){
                        this.algo.start();
                    }
                    
                    break;
                }
            }
        }
    }//GEN-LAST:event_sortButtonActionPerformed

    private void arraySizeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arraySizeComboBoxActionPerformed

        if (!animationUnderway && !algo.isAnimationUnderway()) {
            int newSize = Integer.parseInt(arraySizeComboBox.getSelectedItem().toString());
            Panels.makePanels(newSize);
            Panels.updatePanelArray();
        }
    }//GEN-LAST:event_arraySizeComboBoxActionPerformed

    private void stopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopButtonActionPerformed
        // TODO add your handling code here:
        algo.stop();
        UserWindow.stopButton.setVisible(false);
        UserWindow.updateLabel.setText("Sort Interupted!");
        for(int x = 0; x < Panels.panelsLength; x++){
            Panels.numbersPanel[x].setColour(SorterColor.RED);
        }
    }//GEN-LAST:event_stopButtonActionPerformed

    private void reverseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reverseButtonActionPerformed
        // TODO add your handling code here:
        if (!animationUnderway && !algo.isAnimationUnderway()) {
            int tmp;
            for(int y = Panels.panelsLength; y > 0; y--){
                for(int x = 0; x < (y-1); x++){
                    if (Panels.numbersPanel[x].size() < Panels.numbersPanel[x + 1].size()) {
                        tmp = Panels.numbersPanel[x].size();
                        Panels.numbersPanel[x].setSize(Panels.numbersPanel[x + 1].size());
                        Panels.numbersPanel[x + 1].setSize(tmp);
                    }
                }
            }
            changeArrayToColour(SorterColor.RED);
            Panels.updatePanelArray();
        }
    }//GEN-LAST:event_reverseButtonActionPerformed

    private void orderedListCheckboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderedListCheckboxActionPerformed
        if (!animationUnderway && !algo.isAnimationUnderway()) {
            GeneralManager.useOrderedList = this.orderedListCheckbox.isSelected();
            Panels.makePanels(Panels.panelsLength);
            Panels.updatePanelArray();
        }else{
            this.orderedListCheckbox.setSelected(!this.orderedListCheckbox.isSelected());
        }
    }//GEN-LAST:event_orderedListCheckboxActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

  
        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new UserWindow().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JLabel arraySizeCBLabel;
    public javax.swing.JComboBox arraySizeComboBox;
    public javax.swing.JPanel displayPanel;
    public static javax.swing.JComboBox dropDownSelection;
    public javax.swing.JLabel jLabel1;
    public javax.swing.JPanel jPanel1;
    public javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JSeparator jSeparator1;
    public javax.swing.JSeparator jSeparator2;
    public javax.swing.JSeparator jSeparator3;
    public javax.swing.JPanel mainMenu;
    public static javax.swing.JPanel mainPanel;
    private javax.swing.JCheckBox orderedListCheckbox;
    public static javax.swing.JSlider randomSlider;
    public javax.swing.JLabel randomSliderLabel;
    public javax.swing.JButton randomiserButton;
    private javax.swing.JPanel randomisingOptionsPanel;
    public javax.swing.JButton reverseButton;
    public static javax.swing.JButton sortButton;
    public javax.swing.JPanel sortingOptionsPanel;
    public static javax.swing.JTable statsTable;
    public static javax.swing.JButton stopButton;
    public javax.swing.JLabel tableLabel;
    public javax.swing.JPanel tablePanel;
    public javax.swing.JLabel titleLabel;
    public javax.swing.JPanel titlePanel;
    public static javax.swing.JLabel updateLabel;
    // End of variables declaration//GEN-END:variables
}